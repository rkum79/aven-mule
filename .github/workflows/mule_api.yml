# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: MULESOFT API BUILD & DEPLOYMENT

on:
  push:
    branches: 
     - master # For Prod environment after release it will deploy the PreProd also
     - develop # For Dev/QA environment
     - 'release/*' # For Stage Environment &  PreProd also
     - 'hotfix/*' #  For Preprod environment
  pull_request:
    branches: [master]
    types: [opened, synchronize, reopened]

jobs:
  PreBuild:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Install dependencies for fetch the details from pom.xml
      run: |
        sudo apt-get install xml2
    - name: Set variables
      id: variables
      run: |
       echo ::set-output name=version::`xml2 < pom.xml  | grep /project/version= | sed 's/.*=//'`
       echo ::set-output name=gitlog::`git tag -l |egrep -iwo 1.0.0`
    - name: Build with Maven to create Greeter and Mortal contract
      run: 
       echo VERSION=${{ steps.variables.outputs.version }}
       echo GITLOG=${{ steps.variables.outputs.gitlog }}
    - name: Download Script to check the Pre
      run: |
        wget --retry-connrefused --waitretry=1 --read-timeout=5 --timeout=5 --tries=10 https://raw.githubusercontent.com/rkum79/shell_scripts/master/version_check.sh && chmod +x version_check.sh
    - name: Update version
      run: sh ./version_check.sh
    - uses: actions/checkout@v2
      # this is the new step
    - uses: toko-bifrost/ms-teams-deploy-card@master #  or "./" if in a local set-up
      if: always()
      with:
        github-token: ${{ github.token }}
        webhook-uri: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
        timezone: Asia/Kolkata
        environment: Prebuild

  Munit:
    runs-on: ubuntu-latest
    needs: [PreBuild]
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven to create Greeter and Mortal contract
      run: mvn web3j:generate-sources --file pom.xml
    - uses: actions/checkout@v2
      # this is the new step
    - uses: toko-bifrost/ms-teams-deploy-card@master #  or "./" if in a local set-up
      if: always()
      with:
        github-token: ${{ github.token }}
        webhook-uri: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
        timezone: Asia/Kolkata
        environment: Munit
  Sonar:
    runs-on: ubuntu-latest
    needs: [Munit]
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
#    - name: Build with Maven to create Greeter and Mortal contract
#      run: mvn web3j:generate-sources --file pom.xml
    - uses: actions/checkout@v2
      # this is the new step
    - uses: toko-bifrost/ms-teams-deploy-card@master #  or "./" if in a local set-up
      if: always()
      with:
        github-token: ${{ github.token }}
        webhook-uri: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
        timezone: Asia/Kolkata
        environment: Sonar
  BUILD:
    runs-on: ubuntu-latest
    needs: [PreBuild]
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven to create Greeter and Mortal contract
      run: mvn web3j:generate-sources --file pom.xml
    - name: Build with Maven
      run: mvn install --file pom.xml
    - name: Copy Artifact
      run: mkdir prod-api && cp target/*jar prod-api
    - uses: actions/upload-artifact@v1
      with:
         name: Mule-API
         path: prod-api
    - uses: actions/checkout@v2
      # this is the new step
    - uses: toko-bifrost/ms-teams-deploy-card@master #  or "./" if in a local set-up
      if: always()
      with:
        github-token: ${{ github.token }}
        webhook-uri: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
        timezone: Asia/Kolkata
        environment: Build
  TAG_Creation:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs: [Sonar, BUILD]
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies for fetch the details from pom.xml
      run: |
        sudo apt-get install xml2
    - name: Download Script to create tag
      run: |
        wget --retry-connrefused --waitretry=1 --read-timeout=5 --timeout=5 --tries=10 https://raw.githubusercontent.com/rkum79/shell_scripts/master/postbuild_createtag,sh && chmod +x postbuild_createtag,sh
    - name: Update version
      run: sh ./postbuild_createtag,sh
    - uses: actions/checkout@v2
      # this is the new step
    - uses: toko-bifrost/ms-teams-deploy-card@master #  or "./" if in a local set-up
      if: always()
      with:
        github-token: ${{ github.token }}
        webhook-uri: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
        timezone: Asia/Kolkata
        environment: TagCreate
  Deploy_Prod:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    needs: [Sonar, BUILD]
    name: Prod_Deployment
    environment: production
    env: 
        USER_FRIST_NAME: Rajiv
        USER_MIDDLE_NAME: Kumar
        USER_LAST_NAME: Yadav

    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies for fetch the details from pom.xml
      run: |  
         echo LASTNAME=${USER_LAST_NAME}
         echo FRISTNAME=${USER_FRIST_NAME}
  Deploy_Dev:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    needs: [Sonar, BUILD]
    name: Development_Deployment
    environment: DEV
    env: 
        USER_FRIST_NAME: Rajiv
        USER_MIDDLE_NAME: Kumar
        USER_LAST_NAME: Yadav

    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies for fetch the details from pom.xml
      run: |  
         echo LASTNAME=${USER_LAST_NAME}
         echo FRISTNAME=${USER_FRIST_NAME}
  Deploy_QA:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    needs: [Sonar, BUILD]
    name: QA-SIT_Deployment
    environment: QA
    env: 
        USER_FRIST_NAME: Rajiv
        USER_MIDDLE_NAME: Kumar
        USER_LAST_NAME: Yadav

    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies for fetch the details from pom.xml
      run: |  
         echo LASTNAME=${USER_LAST_NAME}
         echo FRISTNAME=${USER_FRIST_NAME}

  Deploy_Stage:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/release/*' && github.event_name == 'push'
    needs: [Sonar, BUILD]
    name: Stage_Deployment
    environment: Stage
    env: 
        USER_FRIST_NAME: Rajiv
        USER_MIDDLE_NAME: Kumar
        USER_LAST_NAME: Yadav

    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies for fetch the details from pom.xml
      run: |  
         echo LASTNAME=${USER_LAST_NAME}
         echo FRISTNAME=${USER_FRIST_NAME}

  Deploy_PreProd:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/release/*' && github.event_name == 'push'
    needs: [BUILD]
    name: Preprod_Deployment
    environment: Stage
    env: 
        USER_FRIST_NAME: Rajiv
        USER_MIDDLE_NAME: Kumar
        USER_LAST_NAME: Yadav

    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies for fetch the details from pom.xml
      run: |  
         echo LASTNAME=${USER_LAST_NAME}
         echo FRISTNAME=${USER_FRIST_NAME}
  Automation:
    runs-on: ubuntu-latest
#    if: github.ref == 'refs/heads/release/*' && github.event_name == 'push'
    needs: [Deploy_Prod]
    name: Automation_Test
    environment: Stage
    env: 
        USER_FRIST_NAME: Rajiv
        USER_MIDDLE_NAME: Kumar
        USER_LAST_NAME: Yadav

    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies for fetch the details from pom.xml
      run: |  
         echo LASTNAME=${USER_LAST_NAME}
         echo FRISTNAME=${USER_FRIST_NAME}
  OWASP_ZAP:
    runs-on: ubuntu-latest
#    if: github.ref == 'refs/heads/release/*' && github.event_name == 'push'
    needs: [Deploy_Prod]
    name: OWASP_ZAP
    environment: Stage
    env: 
        USER_FRIST_NAME: Rajiv
        USER_MIDDLE_NAME: Kumar
        USER_LAST_NAME: Yadav

    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies for fetch the details from pom.xml
      run: |  
         echo LASTNAME=${USER_LAST_NAME}
         echo FRISTNAME=${USER_FRIST_NAME}
#  BackMerge:
#    runs-on: ubuntu-latest
#    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
#    needs: [OWASP_ZAP, Automation]
#    name: BackMerge_Master_To_Develop
#    steps:
#    - uses: actions/checkout@v2
#    - name: Install dependencies for fetch the details from pom.xml
#      run: |
#        sudo apt-get install xml2
#    - name: Download Script to create tag
#      run: |
 #       wget --retry-connrefused --waitretry=1 --read-timeout=5 --timeout=5 --tries=10 https://raw.githubusercontent.com/rkum79/shell_scripts/master/post_deployment_backmerge.sh && chmod +x post_deployment_backmerge.sh
#    - name: Update version
 #     run: sh ./post_deployment_backmerge.sh
  BackMerge:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    needs: [OWASP_ZAP, Automation]
    name: BackMerge_Master_To_Develop
    steps:
    - uses: actions/checkout@master
    - name: Merge by labeled
      uses: devmasx/merge-branch@v1.3.1
      with:
        label_name: 'merged in develop'
        target_branch: 'develop'
        github_token: ${{ github.token }}
